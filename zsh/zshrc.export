# all exports

# default editor
export VISUAL=nvim
export EDITOR=nvim
export PATH=$HOME/.local/bin:$PATH
export PATH="/usr/local/opt/qt/bin:$PATH"
export PATH="/usr/local/opt/llvm/bin:$PATH"

# go env config
export GOPATH=
export PATH=$HOME/go/bin:$PATH
export GO111MODULE=on
# less的编码 在git diff时使用less 需要设置编码
export LESSCHARSET=utf-8

# dotnet relative
export DOTNET_ROOT=$HOME/.dotnet
export PATH=$PATH:$DOTNET_ROOT:$DOTNET_ROOT/tools

#echo $use_at
if [ "$use_at" = "work_wsl" ]; then
  #export DISPLAY=$(cat /etc/resolv.conf | grep nameserver | awk '{print $2}'):0
  export LC_CTYPE=zh_CN.UTF-8
  export LANG="zh_CN.UTF-8" 
  export LC_ALL="zh_CN.UTF-8" 

  #
  export DISPLAY=localhost:0
  export PULSE_SERVER=tcp:127.0.0.1
  #export DISPLAY=`cat /etc/resolv.conf | grep nameserver | awk '{print $2}'`:0
  #export PULSE_SERVER=`cat /etc/resolv.conf | grep nameserver | awk '{print $2}'`
fi

if [ "$use_at" = "home_manjaro" ]; then
  export https_proxy=http://127.0.0.1:7890 http_proxy=http://127.0.0.1:7890 all_proxy=socks5://127.0.0.1:7890
fi

if [ "$use_at" = "work_wsl2" ]; then
  # 在tmux的session中export gopath
  # 这里还是默认使用go mod吧 

  # 如果使用wsl2的话用下面的
  # need dlercloud enable LAN
  proxy_ip=`cat /etc/resolv.conf|grep nameserver|awk '{print $2}'`


  # 现在可以使用在windows下添加一个.wslconfig文件来实现代理 不需要这样了
  #export https_proxy=http://$proxy_ip:7890 http_proxy=http://$proxy_ip:7890 all_proxy=socks5://$proxy_ip:7891
  export PATH=$PATH:/usr/local/go/bin
fi

if [ "$use_at" = "mac" ]; then
  export https_proxy=http://127.0.0.1:7890 http_proxy=http://127.0.0.1:7890 all_proxy=socks5://127.0.0.1:7890
fi
